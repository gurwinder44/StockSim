/*     
 *    
 *  Author     : ACIMS(Arizona Centre for Integrative Modeling & Simulation)
 *  Version    : DEVSJAVA 2.7 
 *  Date       : 08-15-02 
 */
package StockSim;


import java.awt.Dimension;
import java.awt.Point;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Map;

import GenCol.entity;
import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;



public class StockSimSystem extends ViewableDigraph{
	
	private ArrayList<String> stockSymbols;
	private Map <String, Map> stocksMap;


public StockSimSystem(){
    super("StockSimSystem");
    ReadExcel stockReader = new ReadExcel();
	try {
		stocksMap    = stockReader.read();
		stockSymbols = stockReader.getStockSymbolList();
	} catch (IOException e) {
		e.printStackTrace();
	}
	stockSimSystemConstruct(1,100);
}

public StockSimSystem(String nm,double int_arr_t,double observe_t){
    super(nm);
    stockSimSystemConstruct(int_arr_t,observe_t);
}

public void initialize(){
	
	
	super.initialize();
}

public void stockSimSystemConstruct(double int_arr_t,double observe_t){
     ViewableAtomic g     = new StockGenerator("Generator", stockSymbols, stocksMap);
     ViewableAtomic bh    = new StockBuyAndHold("BuyAndHold", stocksMap.size());
     ViewableDigraph dts  = new DayTradeSystem("DayTradeSystem");
     ViewableAtomic stbh  = new StockTransducer("TransducerBH");
     ViewableAtomic stdtt = new StockTransducer("TransducerDTT");
     ViewableAtomic stdts = new StockTransducer("TransducerDTS");

     add(g);
     add(bh);
     add(dts);
     add(stbh);
     add(stdtt);
     add(stdts);

     initialize();

     addCoupling(g,"OutPrices",dts,"InPrices");
     addCoupling(g,"OutState",dts,"InState");
     addCoupling(g,"OutPrices",bh,"InPrices");
     addCoupling(g,"OutSymbol",bh,"InSymbol");
     addCoupling(g,"OutState",bh,"InState");

     
     addCoupling(g,"OutPrices",dts,"InPrices");
     addCoupling(g,"OutState",dts,"InState");
     
     addCoupling(bh,"BuySellBalance",stbh,"TransactionInput");

     addCoupling(dts,"OutTrendBalance",stdtt,"TransactionInput");
     
     addCoupling(dts,"OutScalpBalance",stdts,"TransactionInput");

     preferredSize = new Dimension(600, 600);
     g.setPreferredLocation(new Point(15, 12));
     bh.setPreferredLocation(new Point(147, 64));
     dts.setPreferredLocation(new Point(154, 267));
     stbh.setPreferredLocation(new Point(350, 19));
     stdtt.setPreferredLocation(new Point(347, 115));
     stdts.setPreferredLocation(new Point(347, 215));
}


    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(1210, 660);
        ((ViewableComponent)withName("TransducerDTT")).setPreferredLocation(new Point(855, 450));
        ((ViewableComponent)withName("BuyAndHold")).setPreferredLocation(new Point(441, 51));
        ((ViewableComponent)withName("TransducerBH")).setPreferredLocation(new Point(859, 57));
        ((ViewableComponent)withName("Generator")).setPreferredLocation(new Point(15, 48));
        ((ViewableComponent)withName("TransducerDTS")).setPreferredLocation(new Point(854, 274));
        ((ViewableComponent)withName("DayTradeSystem")).setPreferredLocation(new Point(231, 212));
    }
}
